<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--配置方式 一 -->
    <!--注解+java方式配置-->
    <!--java配置在com.example.ssmredis.config包里-->
<!--    <context:component-scan base-package="com.example.ssmredis.config" />-->

    <!--配置方式 二 -->
    <!--xml方式配置-->
    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <!--引入多个properties文件，加个ignore-unresolvable="true"-->

    <!-- redis连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"></property>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"></property>
    </bean>

    <!-- redis连接工厂 -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.password}"/>
        <property name="timeout" value="${redis.timeout}"></property>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
<!--        <property name="keySerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
<!--        </property>-->
<!--        <property name="valueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->
<!--&lt;!&ndash;            <bean class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer"/>&ndash;&gt;-->
<!--        </property>-->
<!--        <property name="hashKeySerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
<!--        </property>-->
<!--        <property name="hashValueSerializer">-->
<!--            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
<!--        </property>-->
    </bean>

    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate"/>
        <property name="defaultExpiration" value="${redis.defaultCacheExpireTime}"/>
    </bean>

    <cache:annotation-driven cache-manager="cacheManager" />
</beans>